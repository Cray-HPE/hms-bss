# MIT License
#
# (C) Copyright [2022] Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.

# Tavern test cases for the BSS health APIs
# Author: Ryan Sjostrand

# Service: Boot Script Service

# HMS test metrics test cases: 10
# 1. GET /boot/v1/service/status API response code
# 2. GET /boot/v1/service/status API response body
# 3. GET /boot/v1/service/etcd API response code
# 4. GET /boot/v1/service/etcd API response body
# 5. GET /boot/v1/service/hsm API response code
# 6. GET /boot/v1/service/hsm API response body
# 7. GET /boot/v1/service/version API response code
# 8. GET /boot/v1/service/version API response body
# 9. GET /boot/v1/service/status/all API response code
# 10. GET /boot/v1/service/status/all API response body
---
test_name: bssAPIServiceAPIs

stages:
# 1. GET /boot/v1/service/status API response code
# 2. GET /boot/v1/service/status API response body
- name: bssAPIServiceStatusGET - Ensure the BSS service status endpoint can be retrieved 
  request:
    url: "{bss_base_url}/boot/v1/service/status"
    method: GET
    verify: !bool "{verify}"
  response:
    status_code: 200
    verify_response_with:
      function: tavern.testutils.helpers:validate_pykwalify
      extra_kwargs:
        schema:
          type: map
          required: True
          mapping:
            bss-status:
              type: str
              required: True
              enum:
              - running

# 3. GET /boot/v1/service/etcd API response code
# 4. GET /boot/v1/service/etcd API response body
- name: bssAPIServiceEctdGET - Ensure the BSS service ETCD status endpoint can be retrieved 
  request:
    url: "{bss_base_url}/boot/v1/service/etcd"
    method: GET
    verify: !bool "{verify}"
  response:
    status_code: 200
    verify_response_with:
      function: tavern.testutils.helpers:validate_pykwalify
      extra_kwargs:
        schema:
          type: map
          required: True
          mapping:
            bss-status-etcd:
              type: str
              required: True
              enum:
              - connected

# 5. GET /boot/v1/service/hsm API response code
# 6. GET /boot/v1/service/hsm API response body
- name: bssAPIServiceHsmGET - Ensure the BSS service HSM status endpoint can be retrieved 
  request:
    url: "{bss_base_url}/boot/v1/service/hsm"
    method: GET
    verify: !bool "{verify}"
  response:
    status_code: 200
    verify_response_with:
      function: tavern.testutils.helpers:validate_pykwalify
      extra_kwargs:
        schema:
          type: map
          required: True
          mapping:
            bss-status-hsm:
              type: str
              required: True
              enum:
              - connected

# 7. GET /boot/v1/service/version API response code
# 8. GET /boot/v1/service/version API response body
- name: bssAPIServiceVersionGET - Ensure the BSS version endpoint can be retrieved
  request:
    url: "{bss_base_url}/boot/v1/service/version"
    method: GET
    verify: !bool "{verify}"
  response:
    status_code: 200
    verify_response_with:
      function: tavern.testutils.helpers:validate_pykwalify
      extra_kwargs:
        schema:
          type: map
          required: True
          mapping:
            bss-version:
              type: str
              required: True

# 9. GET /boot/v1/service/status/all API response code
# 10. GET /boot/v1/service/status/all API response body
- name: bssAPIServiceStatusAllGET - Ensure the BSS service all statuses endpoint can be retrieved 
  request:
    url: "{bss_base_url}/boot/v1/service/status/all"
    method: GET
    verify: !bool "{verify}"
  response:
    status_code: 200
    verify_response_with:
      function: tavern.testutils.helpers:validate_pykwalify
      extra_kwargs:
        schema:
          type: map
          required: True
          mapping:
            bss-status:
              type: str
              required: True
              enum:
              - running
            bss-status-etcd:
              type: str
              required: True
              enum:
              - connected
            bss-status-hsm:
              type: str
              required: True
              enum:
              - connected
            bss-version:
              type: str
              required: True
            bss-storage-backend:
              type: map
              required: True
              mapping:
                name:
                  type: str
                  required: True
                status:
                  type: str
                  required: True
